/*
1. 几个新功能的optional的
//新功能
		RegexMacro,//(?#<name>expression)
		MacroReference,//$<name> 
		语法分析已完成


		//匹配行开始
		LineBegin,
		//匹配行结束
		LineEnd,
		2个词法部分完成
		2个语法分析部分完成
		直接在语法分析时转换为零宽断言,该功能实现完成
		//通配符,匹配非\n
		GeneralMatch,
		//匹配所有字符
		MatchAllSymbol,
		直接在语法分析时实现为不同的normalchar,该功能实现完成
		2个语法分析完成
2. optional的实现

ExplicitCapture,//不匿名捕获 词法分析时 "("分情况讨论
IgnoreCase,//大小写不敏感的匹配 修改字母表的部分,最后在匹配时做判断
Multiline,// $^ 匹配行结尾和开头 修改成零宽断言搞定
RightToLeft,// 匹配时处理
Singleline,//.匹配所有字符 修改为不同的charset搞定
OnlyDFA,//所有匿名捕获变非捕获,不使用命名捕获,不使用高级功能

3.修改Loop * + ? 
4. 修改DFA生成算法直接生成表 并且考虑E匹配
5.automachine 修改支持宏功能, expression修改支持宏功能
宏不影响automachine以后的内容,在aumachine构造NFA中,宏引用全部被替换掉
宏本身被替换为空串

*/
/*
目前问题:
1.对于IgnoreCase 需要在interpretor运行时处理. 这块还未完成
2.对于ExplicitCapture, 单元测试还未写
3.Multiline 单元测试未写
4.Singleline 单元测试未写
5.RegexMacro和refer还没写automachine的NFA构造时的处理 已完成
6.DFA生成算法还未修改 修改完成
7.Loop的*+?还未修改 已修改
8.状态机代码太乱,待修改
9.在automachine添加对匿名捕获组的处理 已添加,
10.添加对匿名后向引用和命名后向引用的处理 匿名后向引用已添加
*/

/*
1.EpsilonNFAtoNFA 完成
2.去掉Edge的source成员 完成
3.去掉State的input成员 完成
4.优化alert的节点构造,因为没有input而造成的节点增多应该被解决 解决
5.被DFA匹配的subexpression不用转ENFA 已解决
6.AutoMachine函数太乱,需要重新组织一下 
7.FindReachTargetStateSet待完成 已完成
8.所有的dfa添加final节点,这样dfa不需要vector的finalset了 已修改
9.更好的错误提示
10.RI需要修改权限
11.打印DFA辅助调试
12.?选择Loop的DFA化问题 已解决 外面套一层节点再连接E就OK了
13.parser 括号的嵌套bug ((3)-(3)) 已解决
14. ENFAtoNFA EpsilonNFASet 的性能极低- -待改进 ENFAtoNFA已解决
15.对于循环 {3} {5}这种,用DFA方式 完成
16.添加大量DFA的测试 完成
*/
/*
修改NfaToDfa 多使用vector 解决 NFAToDfa性能开销大 搞定,
		Capture, 完成
		BackReference,	完成
	OK	Jump,//无条件转移边和final差不多,只是不会匹配时被放到最后
	OK	JumpByTime,//通过测试Time次 any pair<int,int> index,number
	OK	JumpByTest,//通过测试  any int index	
		Char, 完成
		Head,完成
		Tail,完成
		PositivetiveLookahead, 完成
		NegativeLookahead, 完成
		PositiveLookbehind,完成
		NegativeLookbehind,完成
		Final, //边后面是终结状态 完成
		AnonymityCapture, 完成
		AnonymityBackReference, 完成
		这些action完成
*/
/*
NFA匹配Code大体完成 待测试
MatchSucced TODO
Loop DFA部分已经注释
*/